/**
 * Input parser
 *
 * @package     KytschBASIC\Parsers\Core\Input\Form
 * @author 		Mike Welsh <hello@kytschi.com>
 * @copyright   2025 Mike Welsh
 * @link 		https://kytschbasic.org
 * @version     0.0.2
 *
 * Copyright 2025 Mike Welsh
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Library General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Library General Public License for more details.
 *
 * You should have received a copy of the GNU Library General Public
 * License along with this library; if not, write to the
 * Free Software Foundation, Inc., 51 Franklin St, Fifth Floor,
 * Boston, MA  02110-1301, USA.
 */
namespace KytschBASIC\Parsers\Core\Input;

use KytschBASIC\Parsers\Core\Command;

class Form extends Command
{
	public function parse(string line, string command, array args)
	{
		switch(command) {
			case "END FORM":
				return "</form>";
			case "FORM":
				return this->processForm(args);
			case "NUMBERINPUT":
				return this->processInput(args, "number");
			case "TEXTINPUT":
				return this->processInput(args);
			case "TEXTAREA":
				return this->processTextarea(args);
			case "CAPTCHA":
				return this->processCaptcha();
			default:
				return null;
		}
	}

	private function processForm(array args)
	{
		var output = "<?= \"<form", method = "GET";
		
		if (isset(args[0]) && !empty(args[0])) {
			let output .= " id=" . this->outputArg(args[0]);
		} else {
			let output .= " id=" . this->outputArg(this->genID("kb-form"), true);
		}

		if (isset(args[1]) && !empty(args[1])) {
			if (in_array(strtoupper(args[1]), ["GET", "POST"])) {
				let method = strtoupper(args[1]);
			}
		}

		let output .= " method=" . this->outputArg(method, true);

		if (isset(args[2]) && !empty(args[2])) {
			let output .= " action=" . this->outputArg(args[2]);
		}

		if (isset(args[3]) && !empty(args[3])) {
			let output .= " class=" . this->outputArg(args[3]);
		}
		
		return output . ">\"; ?>";
	}

	private function processInput(array args, string type = "text")
	{
		var output = "";

		let output = "<?= \"<input type=\\\"" . type . "\\\"";
		
		if (isset(args[0]) && !empty(args[0])) {
			let output .= " name=" . this->outputArg(args[0]);
		} else {
			let output .= " name=" . this->outputArg(this->genID("kb-form-input"), true);
		}

		if (isset(args[1]) && !empty(args[1])) {
			let output .= "value=" . this->outputArg(args[1]);
		}

		if (isset(args[2]) && !empty(args[2])) {
			let output .= " class=" . this->outputArg(args[2]);
		}

		if (isset(args[3]) && !empty(args[3])) {
			let output .= " placeholder=" . this->outputArg(args[3]);
		}

		if (isset(args[4]) && !empty(args[4])) {
			let output .= " id=" . (args[4]);
		} else {
			let output .= " id=" . this->outputArg(this->genID("kb-form-input"), true);
		}

		if (isset(args[5]) && !empty(args[5])) {
			let output .= " required=\\\"required\\\"";
		}

		if (isset(args[6]) && !empty(args[6])) {
			let output .= " " . trim(this->outputArg(args[6], false), "\"");
		}
		
		return output . ">\"; ?>";
	}

	private function processTextarea(array args, string type = "text")
	{
		var output = "<?= \"<textarea", value = "\"\"";
				
		if (isset(args[0]) && !empty(args[0])) {
			let output .= " name=" . this->outputArg(args[0]);
		} else {
			let output .= " name=" . this->outputArg(this->genID("kb-form-input"), true);
		}

		if (isset(args[1]) && !empty(args[1])) {
			let value = args[1];
		}

		if (isset(args[2]) && !empty(args[2])) {
			let output .= " class=" . this->outputArg(args[2]);
		}

		if (isset(args[3]) && !empty(args[3])) {
			let output .= " placeholder=" . this->outputArg(args[3]);
		}

		if (isset(args[4]) && !empty(args[4])) {
			let output .= " id=" . this->outputArg(args[4]);
		} else {
			let output .= " id=" . this->outputArg(this->genID("kb-form-input"), true);
		}

		if (isset(args[5]) && !empty(args[5])) {
			let output .= " required=\\\"required\\\"";
		}

		if (isset(args[6]) && !empty(args[6])) {
			let output .= " \" . " . args[6] . " . \"";
		}
		
		return output . ">\" . " . value . " . \"</textarea>\"; ?>";
	}

	private function processCaptcha()
	{
		var width, height, image, src, trans_colour, length,
            iLoop, data, letter, image_data, keyspace, key, captcha, line_color,
            image_width, image_height;

        let keyspace = ["A", "B", "C", "D", "E", "F", "G", "H", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "x", "y", "z"];

		let data = "";
        let src = imagecreatefromstring(base64_decode(data));
        imagealphablending(src, false);
        imagesavealpha(src, true);

        let length = 6;
        let width = 40;
        let height = 54;
        let image_width = width * length;
        let image_height = 60;
        let image = imagecreatetruecolor(image_width, image_height);
        imagealphablending(image, true);
        imagesavealpha(image, true);
        let trans_colour = imagecolorallocatealpha(image, 0, 0, 0, 127);
        imagefill(image, 0, 0, trans_colour);

        let iLoop = 0;
        let key = 0;
        let captcha = "";
        while (iLoop < length) {
            let key = rand(0, count(keyspace) - 1);
            let captcha .= keyspace[key];
            let letter = imagecrop(
                src,
                [
                    "x": (key * $width),
                    "y": 0,
                    "width": width,
                    "height": height
                ]
            );
            imagealphablending(letter, false);
            imagesavealpha(letter, true);

            imagecopy(image, letter, width * $iLoop, 0, 0, 0, width, height);
            let iLoop += 1;
        }

        let iLoop = 20;
		while iLoop {
            let line_color = imagecolorallocatealpha(image, 0, 0, 0, rand(10, 100));
            imageline(image, rand(0, image_width), rand(0, image_height), rand(0, image_width), rand(0, image_height), line_color);
			let iLoop -= 1;
        }

        ob_start();
        imagepng(image);
        let image_data = ob_get_contents();
        ob_end_clean();
        imagedestroy(image);

        mt_srand(mt_rand(100000, 999999));
		
		var iv, encrypted;
		let iv = openssl_random_pseudo_bytes(openssl_cipher_iv_length("AES-128-CBC"));

        let encrypted = openssl_encrypt(
            "_KBCAPTCHA=" . captcha . "=" . (time() + 1 * 60),
            "aes128",
            captcha,
			0,
			iv
        ) . "=" . base64_encode(iv);

		return "<div class=\"kb-captcha-img\"><img src=\"data:image/png;base64," . base64_encode(image_data) . "\" alt=\"captcha\"/></div>" .
			"<input name=\"kb-captcha\" class=\"kb-captcha-input\" required/>" .
			"<input name=\"_KBCAPTCHA\" type=\"hidden\" value=\"" . encrypted . "\"/>";
	}

	public function validateCaptcha()
	{
		if (!isset(_REQUEST["kb-captcha"])) {
			return 0;
		}

		var splits, iv, encrypted, token;
		let splits = explode("=", _REQUEST["_KBCAPTCHA"]);
		
		let encrypted = splits[0];
		unset(splits[0]);
		
		let iv = base64_decode(ltrim(implode("=", splits), "="));

		if (empty(iv)) {
			return 0;
		}
		
		let token = openssl_decrypt(
            encrypted,
            "aes128",
            _REQUEST["kb-captcha"],
            0,
			iv
        );

        if (!token) {
            return 0;
        }

        let splits = explode("=", token);

        if (splits[0] != "_KBCAPTCHA") {
            return 0;
        }

        if (splits[1] != _REQUEST["kb-captcha"]) {
            return 0;
        }

		if (time() > splits[2]) {
            return 0;
        }

        return 1;
	}
}
